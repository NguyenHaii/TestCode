
CREATE DATABASE StudentManagement;
GO

USE StudentManagement;
GO

CREATE TABLE Class (
    ClassId INT NOT NULL PRIMARY KEY,
    ClassName NVARCHAR(30)
);

CREATE TABLE Student (
    StudentId INT NOT NULL PRIMARY KEY,
    StudentName NVARCHAR(50),
    BirthDate DATETIME,
    ClassId INT,
    CONSTRAINT FK_Student_Class FOREIGN KEY (ClassId) REFERENCES Class(ClassId)
);

CREATE TABLE Subject (
    SubjectId INT NOT NULL PRIMARY KEY,
    SubjectName NVARCHAR(100),
    SessionCount INT CHECK (SessionCount > 0)
);

CREATE TABLE Result (
    StudentId INT NOT NULL,
    SubjectId INT NOT NULL,
    Mark INT,
    PRIMARY KEY (StudentId, SubjectId),
    CONSTRAINT FK_Result_Student FOREIGN KEY (StudentId) REFERENCES Student(StudentId),
    CONSTRAINT FK_Result_Subject FOREIGN KEY (SubjectId) REFERENCES Subject(SubjectId)
);
GO

SET DATEFORMAT DMY;

INSERT INTO Class (ClassId, ClassName)
VALUES (1, N'A1'), (2, N'A2'), (3, N'A3'), (4, N'A4'), (5, N'A5');

INSERT INTO Student (StudentId, StudentName, BirthDate, ClassId)
VALUES 
(1, N'Toàn Ngô Vĩnh', '01/01/1992', 1),
(2, N'Nguyễn Văn Test', '08/06/1993', 3),
(3, N'Nguyễn Văn B', '10/02/2001', 4),
(4, N'Nguyễn Văn C', '30/06/1998', 1),
(5, N'Nguyễn Văn D', '24/08/1995', 2);

INSERT INTO Subject (SubjectId, SubjectName, SessionCount)
VALUES 
(1, N'C Programming', 20),
(2, N'HTML/CSS', 15),
(3, N'Database Management', 30);

INSERT INTO Result (StudentId, SubjectId, Mark)
VALUES 
(1, 1, 8), (1, 2, 7),
(2, 3, 5),
(3, 2, 7),
(4, 3, 8),
(5, 2, 4);
GO

CREATE VIEW vwStudentSubjectMark AS
SELECT 
    s.StudentId,
    s.StudentName,
    sb.SubjectName,
    r.Mark
FROM Result r
JOIN Student s ON r.StudentId = s.StudentId
JOIN Subject sb ON r.SubjectId = sb.SubjectId;
GO

CREATE PROC sp_IncreaseMark @SubjectId INT
AS
BEGIN
    UPDATE Result
    SET Mark = Mark + 1
    WHERE SubjectId = @SubjectId;
END
GO

CREATE NONCLUSTERED INDEX IX_Student_StudentName ON Student(StudentName);
GO

CREATE TRIGGER TG_Result_Insert ON Result
FOR INSERT
AS
BEGIN
    IF EXISTS (SELECT 1 FROM inserted WHERE Mark < 0)
    BEGIN
        RAISERROR('Không được chèn điểm < 0', 16, 1);
        ROLLBACK;
    END
END
GO

CREATE TRIGGER TG_Subject_Update ON Subject
FOR UPDATE
AS
BEGIN
    IF UPDATE(SubjectName)
    BEGIN
        RAISERROR('Không được sửa tên môn học!', 16, 1);
        ROLLBACK;
    END
END
GO


SELECT * FROM Class;

SELECT s.StudentId, s.StudentName, sb.SubjectName, r.Mark
FROM Result r
JOIN Student s ON r.StudentId = s.StudentId
JOIN Subject sb ON r.SubjectId = sb.SubjectId;

SELECT * FROM Student
WHERE BirthDate BETWEEN '1993-01-01' AND '1998-12-31';

SELECT 
    s.StudentId,
    s.StudentName,
    AVG(CAST(r.Mark AS FLOAT)) AS AvgMark
FROM Student s
JOIN Result r ON s.StudentId = r.StudentId
GROUP BY s.StudentId, s.StudentName;

SELECT 
    c.ClassId,
    c.ClassName,
    COUNT(s.StudentId) AS TotalStudents
FROM Class c
LEFT JOIN Student s ON s.ClassId = c.ClassId
GROUP BY c.ClassId, c.ClassName;

SELECT 
    s.StudentId,
    s.StudentName,
    SUM(r.Mark) AS TotalMark
FROM Student s
JOIN Result r ON s.StudentId = r.StudentId
GROUP BY s.StudentId, s.StudentName
HAVING SUM(r.Mark) > 10;
